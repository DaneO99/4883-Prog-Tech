LeetCode 20
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.

class Solution {
private:
    vector<char> stack; 
public:
    bool isValid(string s) {
        for (char c : s) {
            if (c == '{' || c == '(' || c == '[') {
                stack.push_back(c); // Push the character onto the stack
            } else {
                if (stack.empty()) return false; // If stack is empty, no matching opening bracket
                char top = stack.back(); // Get the top element
                if ((c == ')' && top == '(') || 
                    (c == '}' && top == '{') || 
                    (c == ']' && top == '[')) {
                    stack.pop_back(); // Pop the top element if it matches
                } else {
                    return false; // Mismatched brackets
                }
            }
        }
        return stack.empty(); // Return true if all brackets are matched
    }
}; // Ensure this closing brace is present
